IMAGE='insightface-rest'
TAG='v0.8.3.0'
PORT=18080
DEVICE=device='0'
NAME=${IMAGE-gpu}0-trt
USE_NVJPEG=False
PYTHONUNBUFFERED=0
INFERENCE_BACKEND=trt
KEEP_ALL=True

# Change InsightFace-REST logging level (DEBUG,INFO,WARNING,ERROR)
LOG_LEVEL=INFO

# When starting multiple containers this will be port assigned to first container
START_PORT=18081


# Set number of GPU's availiable in your system
n_gpu=1

# Set how many app instances you want to run per GPU, ensure you have enough GPU
# memory for desired number. Try running with n_workers=1 to estimate memory consumption
# per instance.
# Take note: larger number won't speed up single image inference time, it'll increase
# concurrent throughput.
NUM_WORKERS=1

# Maximum image size (W,H). If your input images has fixed image size set this
# value proportional or equal to it. Otherwise select value based on your
# performance/accuracy needs.
# If input images may have both album/portrait orientation it's recommended to
# set square dimensions, like 640x640 for better accuracy.
# ATTENTION: For TensorRT backend this size currently can't be set during
# runtime.
MAX_SIZE=640,640

# Force FP16 mode for building TensorRT engines, even if it's not supported.
# Please check that your GPU supports FP16, otherwise performance may drop.
# For GPUs supporting it gives about 2x performance boost.
FORCE_FP16=False


# DET MODELS:
## retinaface_mnet025_v1, retinaface_mnet025_v2, retinaface_r50_v1, centerface
## scrfd_500m_bnkps, scrfd_2.5g_bnkps, scrfd_10g_bnkps
## scrfd_500m_gnkps, scrfd_2.5g_gnkps, scrfd_10g_gnkps
## yolov5l-face, yolov5m-face, yolov5s-face, yolov5n-face, yolov5n-0.5
## Note: SCRFD family models requires input image shape dividable by 32, i.e 640x640, 1024x768.
DET_NAME=yolov5m-face

## Maximum batch size for detection model
DET_BATCH_SIZE=1

# REC MODELS:
## None, arcface_r100_v1, glintr100, w600k_r50, w600k_mbf
REC_NAME=arcface_r100_v1

## Maximum batch size for recognition model (this value also applies for GA and mask detection models)
REC_BATCH_SIZE=1


# Mask detection models
## None, mask_detector, mask_detector112
MASK_DETECTOR=None

# GENDER/AGE MODELS:
## None, genderage_v1
GA_NAME=None

# Triton Inference Server GRPC uri:port (optional)
# Should be updated when INFERENCE_BACKEND=triton
TRITON_URI='localhost:8001'

# Default settings for inference requests, can be overridden inside
# request body.

## Return base64 encoded face crops.
DEF_RETURN_FACE_DATA=False
## Get faces embeddings. Otherwise only bounding boxes will be returned.
DEF_EXTRACT_EMBEDDING=True
## Estimate gender/age
DEF_EXTRACT_GA=False
##Face detection probability threshold
DET_THRESH=0.6